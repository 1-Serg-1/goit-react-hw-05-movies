{"version":3,"file":"static/js/405.b37bc507.chunk.js","mappings":"uKAAO,IAAMA,EAAe,iC,yHCGfC,EAAwB,WAAO,IAAD,QACnCC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAACC,EAAA,EAAD,CAAKC,EAAE,OAAOC,aAAa,kBAAkBC,UAAU,SAAvD,WACE,SAACH,EAAA,EAAD,CAAKI,GAAG,KAAKC,GAAG,OAAhB,qCAGA,2BACE,yBACE,SAAC,KAAD,CACEC,GAAG,OACHC,MAAO,CAAEC,KAAI,oBAAEV,EAASS,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,WAFzC,qBAOF,yBACE,SAAC,KAAD,CACEF,GAAG,UACHC,MAAO,CAAEC,KAAI,oBAAEV,EAASS,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,WAFzC,4BAUT,E,oCC5BYC,GAAWC,E,QAAAA,IAAOC,EAAAA,GAAPD,CAAH,4MAMV,SAAAT,GAAC,OAAIA,EAAEW,MAAMC,OAAOC,KAAnB,IACG,SAAAb,GAAC,OAAIA,EAAEW,MAAMG,UAAUC,CAAtB,ICHHC,EAAY,SAAC,GAAe,IAAD,IAAZC,EAAY,EAAZA,MAEpBC,EAAY,qBADDpB,EAAAA,EAAAA,MACaQ,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UACvCY,EAAS,UAAMF,EAAMG,aAAaC,MAAM,EAAG,IAK3CC,EAFGL,EAAMM,OAAOC,KAAI,kBAA8B,IAA9B,EAAGC,IAAH,IAEOC,WAEjC,OACE,UAAC3B,EAAA,EAAD,CAAKC,EAAE,OAAOC,aAAa,kBAAkBC,UAAU,SAAvD,WACE,UAACM,EAAD,CAAUH,GAAIa,EAAd,WACE,SAAC,MAAD,KACA,0CAEF,UAACnB,EAAA,EAAD,CAAK4B,QAAQ,OAAOC,WAAW,SAA/B,WACE,gBACEC,MAAM,MACNC,IAAKb,EAAMc,YAAcpC,EAAAA,EAAesB,EAAMc,YAAcC,EAC5DC,IAAKhB,EAAMiB,SAEb,UAACnC,EAAA,EAAD,CAAK4B,QAAQ,OAAOQ,cAAc,SAASC,QAAQ,OAAOpC,EAAE,OAA5D,WACE,0BACGiB,EAAMiB,MADT,IACiBjB,EAAMG,cAAN,WAA0BD,EAA1B,SAEjB,wCAAgBkB,KAAKC,MAA4B,IAArBrB,EAAMsB,aAAsB,IAAxD,QACA,sCACA,uBAAItB,EAAMuB,SAAWvB,EAAMuB,SAAW,iBACtC,oCACA,uBAAIvB,EAAMM,OAAOkB,OAAS,EAAInB,EAAe,sBAKtD,E,oBCdD,EAtBqB,WACnB,IAAQoB,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAO3B,EAAP,KAAc4B,EAAd,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaL,GAASM,KAAKH,EAC5B,GAAE,CAACH,IAECzB,GAKH,iCACE,SAACD,EAAD,CAAWC,MAAOA,KAClB,SAACrB,EAAD,KACA,SAAC,EAAAqD,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,SARG,IAYV,C","sources":["constants/Constants.jsx","components/AdditionalInformation/AdditionalInformation.jsx","components/CardMovie/CardMovie.styled.jsx","components/CardMovie/CardMovie.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["export const IMG_PATH_URL = 'https://image.tmdb.org/t/p/w500';\n","import { Box } from 'components/Box';\nimport { NavLink, useLocation } from 'react-router-dom';\n\nexport const AdditionalInformation = () => {\n  const location = useLocation();\n\n  return (\n    <Box p=\"20px\" borderBottom=\"1px solid black\" className=\"shadow\">\n      <Box as=\"h3\" mb=\"10px\">\n        Additional information\n      </Box>\n      <ul>\n        <li>\n          <NavLink\n            to=\"cast\"\n            state={{ from: location.state?.from ?? '/movies' }}\n          >\n            Cast\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            to=\"reviews\"\n            state={{ from: location.state?.from ?? '/movies' }}\n          >\n            Reviews\n          </NavLink>\n        </li>\n      </ul>\n    </Box>\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const LinkBack = styled(NavLink)`\n  display: flex;\n  gap: 5px;\n  align-items: center;\n  text-decoration: none;\n  padding: 5px;\n  color: ${p => p.theme.colors.black};\n  font-size: ${p => p.theme.fontSizes.m};\n\n  :hover,\n  :focus {\n    color: blue;\n  }\n`;\n","import { IMG_PATH_URL } from 'constants/Constants';\nimport noImage from '../../image/noImage.jpg';\nimport { ImArrowLeft2 } from 'react-icons/im';\nimport { LinkBack } from './CardMovie.styled';\nimport { useLocation } from 'react-router-dom';\nimport { Box } from 'components/Box';\n\nexport const CardMovie = ({ movie }) => {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n  const yearMovie = `${movie.release_date.slice(0, 4)}`;\n  const arrGenres = () => {\n    const arrNameGenres = '';\n    return movie.genres.map(({ name }) => arrNameGenres + ' ' + name);\n  };\n  const stringGenres = arrGenres().toString();\n\n  return (\n    <Box p=\"10px\" borderBottom=\"1px solid black\" className=\"shadow\">\n      <LinkBack to={backLinkHref}>\n        <ImArrowLeft2 />\n        <span>Go back</span>\n      </LinkBack>\n      <Box display=\"flex\" alignItems=\"center\">\n        <img\n          width=\"350\"\n          src={movie.poster_path ? IMG_PATH_URL + movie.poster_path : noImage}\n          alt={movie.title}\n        />\n        <Box display=\"flex\" flexDirection=\"column\" gridGap=\"20px\" p=\"20px\">\n          <h2>\n            {movie.title} {movie.release_date && `(${yearMovie})`}\n          </h2>\n          <p>User Score: {Math.round((movie.vote_average * 100) / 10)}%</p>\n          <h3>Overview</h3>\n          <p>{movie.overview ? movie.overview : 'no overview'}</p>\n          <h3>Genres</h3>\n          <p>{movie.genres.length > 0 ? stringGenres : 'no genres'}</p>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n","import { AdditionalInformation } from 'components/AdditionalInformation/AdditionalInformation';\nimport { CardMovie } from 'components/CardMovie/CardMovie';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\nimport { getMovieById } from 'services/themoviedb-api';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    getMovieById(movieId).then(setMovie);\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n\n  return (\n    <>\n      <CardMovie movie={movie} />\n      <AdditionalInformation />\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\nexport default MovieDetails;\n"],"names":["IMG_PATH_URL","AdditionalInformation","location","useLocation","Box","p","borderBottom","className","as","mb","to","state","from","LinkBack","styled","NavLink","theme","colors","black","fontSizes","m","CardMovie","movie","backLinkHref","yearMovie","release_date","slice","stringGenres","genres","map","name","toString","display","alignItems","width","src","poster_path","noImage","alt","title","flexDirection","gridGap","Math","round","vote_average","overview","length","movieId","useParams","useState","setMovie","useEffect","getMovieById","then","Suspense","fallback"],"sourceRoot":""}