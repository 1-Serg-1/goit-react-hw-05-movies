{"version":3,"file":"static/js/736.224c5bff.chunk.js","mappings":"kQAEaA,EAAWC,EAAAA,GAAAA,GAAH,4KAURC,EAAWD,EAAAA,GAAAA,GAAH,oGAORE,EAAUF,EAAAA,GAAAA,IAAH,8C,6BCoCpB,EA/Ca,WACX,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaN,GAASO,KAAKH,EAC5B,GAAE,CAACJ,IAEgB,IAAhBG,EAAKK,QAEL,SAACC,EAAA,EAAD,CAAKC,GAAG,IAAIC,EAAE,OAAd,qDAMCR,GAKH,SAACP,EAAD,UACGO,EAAKS,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UACnC,OACE,UAAClB,EAAD,YACE,SAACC,EAAD,CACEkB,IACEF,EAAeG,EAAAA,EAAeH,EAAeI,EAE/CC,IAAKN,KAEP,UAACL,EAAA,EAAD,CACEY,QAAQ,OACRC,cAAc,SACdC,SAAS,OACTC,QAAQ,OAJV,WAME,wBAAKV,KACL,uCAAeE,UAdJH,EAkBlB,MAzBI,IA4BV,C,uDCrDM,IAAMK,EAAe,iC","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","constants/Constants.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListCast = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 25px;\n  list-style: none;\n  padding-top: 25px;\n  padding-bottom: 25px;\n`;\n\nexport const ItemCast = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  width: 200px;\n`;\n\nexport const ImgCast = styled.img`\n  object-fit: cover;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'services/themoviedb-api';\nimport { IMG_PATH_URL } from 'constants/Constants';\nimport { ImgCast, ItemCast, ListCast } from './Cast.styled';\nimport noPhotoAvailable from '../../image/noPhotoAvailable.jpg';\nimport { Box } from 'components/Box';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    getMovieCast(movieId).then(setCast);\n  }, [movieId]);\n\n  if (cast.length === 0) {\n    return (\n      <Box as=\"p\" p=\"15px\">\n        We don't have list cast for this movie.\n      </Box>\n    );\n  }\n\n  if (!cast) {\n    return null;\n  }\n\n  return (\n    <ListCast>\n      {cast.map(({ id, name, profile_path, character }) => {\n        return (\n          <ItemCast key={id}>\n            <ImgCast\n              src={\n                profile_path ? IMG_PATH_URL + profile_path : noPhotoAvailable\n              }\n              alt={name}\n            />\n            <Box\n              display=\"flex\"\n              flexDirection=\"column\"\n              flexWrap=\"wrap\"\n              gridGap=\"10px\"\n            >\n              <h3>{name}</h3>\n              <p>Character: {character}</p>\n            </Box>\n          </ItemCast>\n        );\n      })}\n    </ListCast>\n  );\n};\n\nexport default Cast;\n","export const IMG_PATH_URL = 'https://image.tmdb.org/t/p/w500';\n"],"names":["ListCast","styled","ItemCast","ImgCast","movieId","useParams","useState","cast","setCast","useEffect","getMovieCast","then","length","Box","as","p","map","id","name","profile_path","character","src","IMG_PATH_URL","noPhotoAvailable","alt","display","flexDirection","flexWrap","gridGap"],"sourceRoot":""}